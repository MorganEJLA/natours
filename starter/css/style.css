/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/


/* BASIC RESET */

*{
    margin: 0;
    padding:0;
    box-sizing:border-box;
}

body{
    font-family: 'Lato', sans-serif;
    font-weight:400;
    font-size:1em;
    line-height:1.7;
    color:#777;
    padding:30px;
}


.header{
    height:95vh;
    background-image: linear-gradient(to right bottom,rgba(126, 213, 111, 0.8),rgba(40, 180, 133, 0.8)),url('../img/hero.jpg');
    background-size:cover;
    background-position:top;
    position:relative;
    /*clippy site for more css shapes */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    
}

.logo-box{
    position:absolute;
    top:40px;
    left:40px;
}

.logo{
    height:35px;
}

/* .logo:hover{
    animation: moveInRight 1s ease-out;
} */


.text-box{
    position:absolute;
    top:40%;
    left:50%;
    transform:
        translate(-50%, -50%);
    text-align:center;
}
.heading-primary{
    color:#fff;
    text-transform: uppercase;

    backface-visibility: hidden;
    margin-bottom:60px;

}

.heading-primary-main{

    display:block;
    font-size:60px;
    font-weight:400;
    letter-spacing: 35px;

    animation-name:moveInLeft;
    animation-duration:1s;
    animation-timing-function:ease-out;



    /* animation-iteration-count: 3; */
    /* animation-delay:3s; */


}

.heading-primary-sub{
display:block;
font-size:20px;
font-weight:700;
letter-spacing:18px;

    animation-name:moveInRight;
    animation-duration:1s;
    animation-timing-function:ease-out;

}
@keyframes moveInLeft {
    0%{
        opacity:0;
        transform: translatex(-100px);
    }

    80%{
        transform: translatex(10px);
    }

    100%{
        opacity:1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0%{
        opacity:0;
        transform: translatex(100px);
    }

    80%{
        transform: translatex(-10px);
    }

    100%{
        opacity:1;
        transform: translate(0);
    }
}

@keyframes moveInButton {
    0%{
        opacity:0;
        transform: translateY(30px);
    }


    100%{
        opacity:1;
        transform: translate(0);
    }
}


.btn:link,
.btn:visited {
    /*special state of an element-pseudo class */
    text-transform:uppercase;
    text-decoration:none;
    padding:15px 40px;
    /*inline element so we need to change it to a block element. since its an inline
    element its treated as text. its parent text-box will use text-align:center */
    display:inline-block;
    border-radius:100px;
    transition: all .2s;
    /*transition property has to be on the initial state */
    /*set the position property of the button to relative */
    position:relative;

}

.btn:hover{
    /*want the element to move up so use the transform state */
    transform: translateY(-3px);
    box-shadow: 0 5px 20px rgba(0,0,0,.2);
}

.btn:active{
    transform:translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0, .2)
}


.btn-white{
    background-color:white;
    color:#777;
}

.btn::after {
    /*adds an element right after the element we are selecting*/
    content: "";
    display: inline-block;
    height:100%;
    width:100%;
    border-radius: 100px;
    /*put it behind the element by using absolute positioning */
    position:absolute;
    top:0;
    left:0;
    /*absolute position needs a reference and the reference is the first element
    with the relative position it can find. This would be the header but I dont want that
    I want it hidden after the button. So the reference should be the button */
    /*set the z index to minus one. Z index defines the positon of the elements if they are one 
    on top of another, This is minus one because it's behind the button */
    z-index:-1;
    transition: all .4s;
    


}

.btn-white::after{
    background-color:#fff;
}

.btn:hover:after{
   /*we want element to grow and to fade out */
   transform:scaleX(1.5)scaleY(1.6); 
   /*fading something out, use opacity:0 */
   opacity: 0;

}

.btn-animated{
    animation: moveInButton .5s ease-out .75s;
    animation-fill-mode: backwards;
    /*animation-fill-mode automatically applies the styles up to 0% before the 
    animation starts */
    
}